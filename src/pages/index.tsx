import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useSession, signIn, signOut } from "next-auth/react";
import { api } from "~/utils/api";
import { useRouter } from "next/navigation";
import { toast } from "~/components/ui/use-toast";
import formImage from "../../public/form.png";
import { LoadingSpinner } from "~/components/loading";

export default function Home() {
  const router = useRouter();

  const { data: forms, isLoading: isLoadingForms } =
    api.forms.getByUserId.useQuery();
  const { mutate } = api.forms.create.useMutation({
    onSuccess: (data) => {
      // data is the argument to the onSuccess callback
      router.push(`/form/${data.id}`);
      toast({
        variant: "success",
        title: "Form Created",
        description: "You have successfully created a new form.",
        duration: 5000,
      });
    },

    onError: (error) => {
      toast({
        variant: "destructive",
        title: "Error Creating New Form",
        description: error.message,
        duration: 5000,
      });
    },
  });

  const createNewForm = () => {
    mutate();
  };

  return (
    <>
      <Head>
        <title>NT Static Form</title>
        <meta name="description" content="Generated by Nhat Tien" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="">
        <div className="flex w-full flex-col items-start justify-center bg-slate-950 px-96 py-5">
          <h1 className="text-muted">Start a new Form</h1>
          <div className="flex items-center justify-center">
            <div className="flex flex-col items-start justify-center">
              <Image
                src={"/forms-blank-googlecolors.png"}
                alt="add new form"
                width={192}
                height={192}
                className="my-3 rounded border border-gray-300 hover:cursor-pointer hover:border-slate-900"
                onClick={createNewForm}
              />
              <h1 className="text-muted">New form</h1>
            </div>
          </div>
        </div>
        <div className="flex w-full flex-col items-start justify-center px-96 py-5">
          <h1 className="text-xl font-semibold">Recent Forms</h1>
          {isLoadingForms ? (
            <div className="mt-3 flex items-center justify-center">
              <LoadingSpinner size={30} />
            </div>
          ) : (
            <>
              {forms?.length ? (
                <div className="mt-3 flex flex-wrap items-start justify-center">
                  {forms.map((form) => {
                    return (
                      <div
                        key={form.id}
                        className="mb-10 mr-10 flex flex-col rounded border hover:cursor-pointer hover:border-slate-900"
                      >
                        <Link href={`/form/${form.id}`}>
                          <Image
                            src={formImage.src}
                            alt={form.name}
                            width={192}
                            height={192}
                            className="border-b"
                          />
                        </Link>
                        <h1 className="p-3 text-muted-foreground">
                          {form.name}
                        </h1>
                      </div>
                    );
                  })}
                </div>
              ) : (
                <div className="mt-3 flex flex-col items-center justify-center">
                  <h1 className="text-muted-foreground">No form found</h1>
                </div>
              )}
            </>
          )}
        </div>
        <AuthShowcase />
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <button
        className=""
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
